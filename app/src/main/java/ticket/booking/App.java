/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.UserBookingService;
import ticket.booking.utils.UserServiceUtil;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.UUID;

public class App {
    public static void main(String[] args) throws IOException {
        System.out.println("\n--------Running Train Booking System ----\n");

        Scanner sc=new Scanner(System.in);
        int option=0;
        UserBookingService userBookingService;
        userBookingService=new UserBookingService();
        while (option!=6){
            System.out.println("Select from the below options" +
                    "\n1.Signup" +
                    "\n2.Login"+
                    "\n3.Logout"+
                    "\n4.Get Booking Info"+
                    "\n5.Search Train"+
                    "\n6.Exit");
            System.out.print("Enter option no : ");
            option=sc.nextInt();

            switch (option){
                case 1:
                    System.out.print("\nEnter username to signup :");
                    String username=sc.next();
                    System.out.print("\nEnter a password :");
                    String password=sc.next();
                    User userToSignup=new User(username,password, UserServiceUtil.hashPassword(password),
                            new ArrayList<>(), UUID.randomUUID().toString());
                    Boolean isValid=userBookingService.signUp(userToSignup);
                    if(isValid){
                        System.out.println("User signed up sucessfully !");
                    }
                    else{
                        System.out.println("User with the username already exists");
                    }
                    break;

                case 2:
                    System.out.print("\nEnter username to login :");
                    String loginUsername=sc.next();
                    System.out.print("\nEnter a password to login:");
                    String loginPassword=sc.next();
                    User userToLogin=new User(loginUsername,loginPassword, UserServiceUtil.hashPassword(loginPassword),
                            new ArrayList<>(), UUID.randomUUID().toString());
                    userBookingService=new UserBookingService(userToLogin);
                    Boolean isLoginValid=userBookingService.loginUser();
                    if(isLoginValid){
                        System.out.println("User Logged in sucessfully !");
                    }
                    else{
                        userBookingService.setUser(null);
                        System.out.println("Invalid Credentials, Please Try Again");
                    }
                    break;

                case 3:
                    userBookingService.logout();
                    break;

                case 4:
                    if(userBookingService.getUser()==null){
                        System.out.println("Please login first to show booked tickets");
                    }
                    else{
                        userBookingService.fetchBooking();
                    }
                break;

                case 5:
                    System.out.print("\nEnter source : ");
                    String source=sc.next();
                    System.out.print("\nEnter destination : ");
                    String destination=sc.next();
                    List<Train> trainsList=userBookingService.getTrains(source,destination);
                    if(trainsList.size()==0){
                        System.out.println("\nNo Trains Found !\n");
                    }
                    trainsList.forEach(train -> {
                        System.out.println(String.format("\n--------------------------TRAIN %s---------------------------\n",train.getTrainNo()));
                        System.out.println(
                                String.format("train_id : %s\nDeparture:%s %s\nArrival:%s %s",
                                        train.getTrainId(),
                                        source,
                                        train.getStationTimes().get(source),
                                        destination,
                                        train.getStationTimes().get(destination)
                                )
                        );
                        System.out.println("\n-----------------------------------------------------------------\n");
                    });
                    break;

                case 6:
                    System.out.print("Exiting App...");
                    break;

                default:
                    System.out.println("Invalid Option !");
                    break;
            }
        }
    }
}
